-- Ensure sequences exist for auto-increment behavior
CREATE SEQUENCE IF NOT EXISTS employee_seq;
CREATE SEQUENCE IF NOT EXISTS project_seq;

-- Create Users Table
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    enabled BOOLEAN DEFAULT TRUE
);

-- Create User Roles Table
CREATE TABLE IF NOT EXISTS user_roles (
    user_id BIGINT NOT NULL,
    role VARCHAR(50) NOT NULL,
    PRIMARY KEY (user_id, role),
    CONSTRAINT fk_user_roles_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Create Employee Table
CREATE TABLE IF NOT EXISTS employee (
                                        employee_id BIGINT NOT NULL DEFAULT nextval('employee_seq') PRIMARY KEY,
    email VARCHAR(100) NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    department VARCHAR(50)
    );

-- Create Project Table
CREATE TABLE IF NOT EXISTS project (
                                       project_id BIGINT NOT NULL DEFAULT nextval('project_seq') PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    stage VARCHAR(100) NOT NULL,
    description VARCHAR(500) NOT NULL,
    status VARCHAR(50) DEFAULT 'PENDING',
    progress INTEGER DEFAULT 0,
    start_date DATE,
    end_date DATE,
    assigned_member_id BIGINT,
    CONSTRAINT fk_project_assigned_member FOREIGN KEY (assigned_member_id) REFERENCES employee(employee_id)
    );

-- Create Project_Employee Mapping Table with Proper Foreign Key References
CREATE TABLE IF NOT EXISTS project_employee (
                                                project_id BIGINT NOT NULL,
                                                employee_id BIGINT NOT NULL,
                                                PRIMARY KEY (project_id, employee_id),
    CONSTRAINT fk_project FOREIGN KEY (project_id) REFERENCES project (project_id) ON DELETE CASCADE,
    CONSTRAINT fk_employee FOREIGN KEY (employee_id) REFERENCES employee (employee_id) ON DELETE CASCADE
    );
